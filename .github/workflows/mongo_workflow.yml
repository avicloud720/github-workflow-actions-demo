# Give a name to the workflow
name: Mongo Backup

# To automatically trigger a workflow, use on to define which events can cause the workflow to run.
on: [push]

env:
  MONGO_ATLAS_PUB_API_KEY: ${{ secrets.MONGO_ATLAS_PUB_API_KEY }}
  MONGO_ATLAS_PRIV_API_KEY: ${{ secrets.MONGO_ATLAS_PRIV_API_KEY }}
  MONGO_ATLAS_PROJECT_ID: ${{ secrets.MONGO_ATLAS_PROJECT_ID }}
  MONGO_ATLAS_ORG_ID: ${{ secrets.MONGO_ATLAS_ORG_ID }}

jobs:
  mongo_connection:
    runs-on: ubuntu-latest
    steps:
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: MongoDB Connection in progress......
        id: connection
        uses: ./.github/actions/mongo
        with:
          runner_ip: ${{ steps.ip.outputs.ipv4 }}
      # Use the output from the `connection` step
      - name: Get the output
        run: echo "The cluster list ${{ steps.connection.outputs.clusters_list }}"
  connection_completed:
    needs: mongo_connection
    runs-on: ubuntu-latest
    steps:
      - name: MongoDB Connection Status
        run: echo "MongoDB Connection is successful"